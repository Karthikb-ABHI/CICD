jobs:
- job: DeployJob
  displayName: Deploy Application
  pool:
    name: 'MTPre'  # Replace with your agent pool name

  steps:
    - task: PowerShell@2
      displayName: Backup App Folder
      inputs:
        targetType: 'inline'
        script: |
          if (Test-Path "$(deployPath)") {
            $backupPathWithBuild = "$(backupPath)_$(Build.BuildId)"
            Copy-Item -Recurse -Force "$(deployPath)" $backupPathWithBuild
            Write-Host "Backup created at: $backupPathWithBuild"
          } else {
            Write-Host "Deploy path does not exist, skipping backup."
          }

    - task: PowerShell@2
      displayName: Stop App Pool
      inputs:
        targetType: 'inline'
        script: |
          $poolState = (Get-WebAppPoolState -Name "$(appPoolName)").Value
          if ($poolState -eq "Started") {
            Stop-WebAppPool -Name "$(appPoolName)"
            Write-Host "Stopped App Pool: $(appPoolName)"
          } else {
            Write-Host "App Pool '$(appPoolName)' is already stopped."
          }

    - task: PowerShell@2
      displayName: Kill Suspended w3wp.exe (if any)
      inputs:
        targetType: 'inline'
        script: |
          Get-WmiObject Win32_Process -Filter "Name = 'w3wp.exe'" |
            Where-Object { $_.CommandLine -like "*$(appPoolName)*" } |
            ForEach-Object {
              Stop-Process -Id $_.ProcessId -Force
              Write-Host "Killed w3wp.exe with PID $($_.ProcessId)"
            }

    - task: PowerShell@2
      displayName: Deploy to IIS
      inputs:
        targetType: 'inline'
        script: |
          if (Test-Path "$(deployPath)") {
            Remove-Item -Recurse -Force "$(deployPath)\*" -ErrorAction SilentlyContinue
            Write-Host "Cleared deploy path: $(deployPath)"
          } else {
            New-Item -ItemType Directory -Path "$(deployPath)" | Out-Null
            Write-Host "Created deploy path: $(deployPath)"
          }

          if (Test-Path "$(publishOutput)") {
            Copy-Item -Recurse -Force "$(publishOutput)\*" "$(deployPath)\"
            Write-Host "Copied published files to deploy path."
          } else {
            Write-Error "Publish output not found at $(publishOutput)"
          }

    - task: PowerShell@2
      displayName: Start App Pool + Verify
      inputs:
        targetType: 'inline'
        script: |
          Start-WebAppPool -Name "$(appPoolName)"
          Start-Sleep -Seconds 10
          $status = (Get-WebAppPoolState -Name "$(appPoolName)").Value
          if ($status -eq "Started") {
            Write-Host "App Pool $(appPoolName) started successfully."
          } else {
            Write-Error "App Pool $(appPoolName) failed to start."
          }
