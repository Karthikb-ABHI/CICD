name: MTPREE-2.20

trigger:
  branches:
    include:
      - main

pool:
  name: MTPre  # Use your self-hosted agent pool

variables:
  appPoolName: 'CICDTest'
  sourcePath: 'E:\Temp\CICDTest_Temp'
  deployPath: 'E:\DeployedProjects\CICDTest'
  backupRootPath: 'E:\Deployments\backup\CICDTest'
  buildConfiguration: 'Release'

stages:
# ======================= Build & Deploy ========================
- stage: DeployStage
  displayName: Build and Deploy
  jobs:
    - job: BuildAndDeploy
      displayName: Build & Deploy to IIS
      steps:
        - checkout: self
          clean: true

        - task: PowerShell@2
          displayName: 'Stop App Pool (Graceful + Wait 60s)'
          inputs:
            targetType: 'inline'
            script: |
              try {
                $appPool = Get-WebAppPoolState -Name "$(appPoolName)"
                if ($appPool.Value -eq "Stopped") {
                  Write-Host "Application pool '$(appPoolName)' is already stopped."
                } else {
                  C:\Windows\System32\inetsrv\appcmd.exe stop apppool /apppool.name:"$(appPoolName)"
                  Write-Host "Application pool '$(appPoolName)' stopped successfully."
                }
              } catch {
                Write-Warning "Could not check or stop App Pool '$(appPoolName)': $_"
              }
              Write-Host "Waiting 60 seconds to ensure app pool is fully stopped..."
              Start-Sleep -Seconds 60

        - task: PowerShell@2
          displayName: 'Backup Current Deployment as ZIP'
          inputs:
            targetType: 'inline'
            script: |
              if (Test-Path "$(deployPath)") {
                $timestamp = Get-Date -Format 'yyyyMMddHHmmss'
                $backupFile = "$(backupRootPath)\backup_$timestamp.zip"
                if (!(Test-Path "$(backupRootPath)")) {
                  New-Item -ItemType Directory -Path "$(backupRootPath)" -Force | Out-Null
                }
                Compress-Archive -Path "$(deployPath)\*" -DestinationPath $backupFile -Force
                Write-Host "##vso[task.setvariable variable=latestBackupFile]$backupFile"
                Write-Host "Backup saved as: $backupFile"
              } else {
                Write-Host "No deployment found at $(deployPath); skipping backup."
              }

        - task: PowerShell@2
          displayName: 'Restore Dependencies'
          inputs:
            targetType: 'inline'
            script: |
              dotnet restore

        - task: PowerShell@2
          displayName: 'Build Project'
          inputs:
            targetType: 'inline'
            script: |
              dotnet build --configuration $(buildConfiguration) --no-restore

        - task: PowerShell@2
          displayName: 'Publish Project'
          inputs:
            targetType: 'inline'
            script: |
              dotnet publish --configuration $(buildConfiguration) --output "$(sourcePath)"

        - task: PowerShell@2
          displayName: 'Deploy to IIS Folder'
          inputs:
            targetType: 'inline'
            script: |
              Remove-Item -Recurse -Force "$(deployPath)\*" -ErrorAction SilentlyContinue
              Copy-Item -Path "$(sourcePath)\*" -Destination "$(deployPath)\" -Recurse -Force

        - task: PowerShell@2
          displayName: 'Start App Pool + Verify'
          inputs:
            targetType: 'inline'
            script: |
              C:\Windows\System32\inetsrv\appcmd.exe start apppool /apppool.name:"$(appPoolName)"
              Start-Sleep -Seconds 10
              $status = (Get-WebAppPoolState -Name "$(appPoolName)").Value
              if ($status -ne "Started") {
                Write-Error "App Pool failed to start"
              }

# ======================= Rollback ========================
- stage: RollbackStage
  displayName: Rollback Deployment
  dependsOn: DeployStage
  condition: failed()
  jobs:
    - job: RollbackJob
      displayName: Rollback to Previous Version
      steps:
        - task: PowerShell@2
          displayName: 'Stop App Pool (Graceful + Wait 60s - Rollback)'
          inputs:
            targetType: 'inline'
            script: |
              try {
                $appPool = Get-WebAppPoolState -Name "$(appPoolName)"
                if ($appPool.Value -eq "Stopped") {
                  Write-Host "Application pool '$(appPoolName)' is already stopped."
                } else {
                  C:\Windows\System32\inetsrv\appcmd.exe stop apppool /apppool.name:"$(appPoolName)"
                  Write-Host "Application pool '$(appPoolName)' stopped successfully."
                }
              } catch {
                Write-Warning "Could not check or stop App Pool '$(appPoolName)': $_"
              }
              Write-Host "Waiting 60 seconds to ensure app pool is fully stopped..."
              Start-Sleep -Seconds 60

        - task: PowerShell@2
          displayName: 'Restore Latest Backup ZIP'
          inputs:
            targetType: 'inline'
            script: |
              $backupRoot = "$(backupRootPath)"
              $latestZip = Get-ChildItem -Path $backupRoot -Filter "backup_*.zip" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
              if (-not $latestZip) {
                Write-Error "No backup ZIP files found in $backupRoot. Cannot rollback!"
              } else {
                Write-Host "Restoring from backup file: $($latestZip.FullName)"
                Remove-Item -Recurse -Force "$(deployPath)\*" -ErrorAction SilentlyContinue
                Expand-Archive -Path $latestZip.FullName -DestinationPath "$(deployPath)" -Force
              }

        - task: PowerShell@2
          displayName: 'Start App Pool After Rollback'
          inputs:
            targetType: 'inline'
            script: |
              C:\Windows\System32\inetsrv\appcmd.exe start apppool /apppool.name:"$(appPoolName)"
              Start-Sleep -Seconds 10
              $status = (Get-WebAppPoolState -Name "$(appPoolName)").Value
              if ($status -ne "Started") {
                Write-Error "App Pool failed to start after rollback"
              }
